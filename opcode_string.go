// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddC128AddI32AddI64AddPtrAddPtrsAddSPAnd16And32And64And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBitfieldI8BitfieldI16BitfieldI32BitfieldI64BitfieldU8BitfieldU16BitfieldU32BitfieldU64BoolC128BoolF32BoolF64BoolI16BoolI32BoolI64BoolI8CallCallFPConvC64C128ConvF32F64ConvF32I32ConvF32I64ConvF32U32ConvF64F32ConvF64I32ConvF64I64ConvF64I8ConvF64U16ConvF64U32ConvF64U64ConvI16I32ConvI16I64ConvI16U32ConvI32C128ConvI32C64ConvI32F32ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64F64ConvI64I16ConvI64I32ConvI64I8ConvI64U16ConvI8I16ConvI8I32ConvI8I64ConvI8U32ConvU16I32ConvU16I64ConvU16U32ConvU32F32ConvU32F64ConvU32I16ConvU32I64ConvU32U8ConvU8I16ConvU8I32ConvU8U32ConvU8U64CopyCpl32Cpl64Cpl8DSDSC128DSI16DSI32DSI64DSI8DSNDivF32DivF64DivI32DivI64DivU32DivU64Dup32Dup64Dup8EqF32EqF64EqI32EqI64EqI8ExtFPField8Field16Field64FuncGeqF32GeqF64GeqI32GeqI64GeqU32GeqU64GtF32GtF64GtI32GtI64GtU32GtU64IndexIndexI16IndexI32IndexI64IndexU32IndexU64IndexI8IndexU8JmpJmpPJnzJzLabelLeqF32LeqF64LeqI32LeqI64LeqU32LeqU64LoadLoad16Load32Load64Load8LshI16LshI32LshI64LshI8LtF32LtF64LtI32LtI64LtU32LtU64MulC64MulF32MulF64MulI32MulI64NegF32NegF64NegI16NegI32NegI64NegI8NegIndexI32NegIndexI64NegIndexU64NeqC128NeqC64NeqF32NeqF64NeqI32NeqI64NotOr32Or64PanicPostIncF64PostIncI16PostIncI32PostIncI64PostIncI8PostIncPtrPostIncU32BitsPostIncU64BitsPreIncI16PreIncI32PreIncI64PreIncI8PreIncPtrPreIncU32BitsPreIncU64BitsPtrDiffPush8Push16Push32Push64PushC128RemI32RemI64RemU32RemU64ReturnRshI16RshI32RshI64RshI8RshU16RshU32RshU64RshU8StoreStore16Store32Store64Store8StoreBits16StoreBits32StoreBits64StoreBits8StrNCopySubF32SubF64SubI32SubI64SubPtrsTextVariableVariable16Variable32Variable64Variable8Xor32Xor64Zero8Zero16Zero32Zero64abortabsacosallocaasinatanbswap64callocceilclrsbclrsblclrsbllclzclzlclzllcopysigncoscoshctzctzlctzllexitexpfabsfcloseffsffslffsllfgetcfgetsfloorfopenfprintfframeAddressfreadfreefwriteisinfisinffisinflisprintloglog10mallocmemcmpmemcpymemsetparityparitylparityllpopcountpopcountlpopcountllpowprintfreturnAddressroundsign_bitsign_bitfsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolowervfprintfvprintf"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 24, 30, 36, 42, 49, 54, 59, 64, 69, 73, 81, 91, 101, 111, 120, 129, 140, 142, 152, 163, 174, 185, 195, 206, 217, 228, 236, 243, 250, 257, 264, 271, 277, 281, 287, 298, 308, 318, 328, 338, 348, 358, 368, 377, 387, 397, 407, 417, 427, 437, 448, 458, 468, 478, 488, 498, 507, 517, 527, 537, 546, 556, 565, 574, 583, 592, 602, 612, 622, 632, 642, 652, 662, 671, 680, 689, 698, 707, 711, 716, 721, 725, 727, 733, 738, 743, 748, 752, 755, 761, 767, 773, 779, 785, 791, 796, 801, 805, 810, 815, 820, 825, 829, 832, 834, 840, 847, 854, 858, 864, 870, 876, 882, 888, 894, 899, 904, 909, 914, 919, 924, 929, 937, 945, 953, 961, 969, 976, 983, 986, 990, 993, 995, 1000, 1006, 1012, 1018, 1024, 1030, 1036, 1040, 1046, 1052, 1058, 1063, 1069, 1075, 1081, 1086, 1091, 1096, 1101, 1106, 1111, 1116, 1122, 1128, 1134, 1140, 1146, 1152, 1158, 1164, 1170, 1176, 1181, 1192, 1203, 1214, 1221, 1227, 1233, 1239, 1245, 1251, 1254, 1258, 1262, 1267, 1277, 1287, 1297, 1307, 1316, 1326, 1340, 1354, 1363, 1372, 1381, 1389, 1398, 1411, 1424, 1431, 1436, 1442, 1448, 1454, 1462, 1468, 1474, 1480, 1486, 1492, 1498, 1504, 1510, 1515, 1521, 1527, 1533, 1538, 1543, 1550, 1557, 1564, 1570, 1581, 1592, 1603, 1613, 1621, 1627, 1633, 1639, 1645, 1652, 1656, 1664, 1674, 1684, 1694, 1703, 1708, 1713, 1718, 1724, 1730, 1736, 1741, 1744, 1748, 1754, 1758, 1762, 1769, 1775, 1779, 1784, 1790, 1797, 1800, 1804, 1809, 1817, 1820, 1824, 1827, 1831, 1836, 1840, 1843, 1847, 1853, 1856, 1860, 1865, 1870, 1875, 1880, 1885, 1892, 1904, 1909, 1913, 1919, 1924, 1930, 1936, 1943, 1946, 1951, 1957, 1963, 1969, 1975, 1981, 1988, 1996, 2004, 2013, 2023, 2026, 2032, 2045, 2050, 2058, 2067, 2070, 2074, 2081, 2085, 2091, 2097, 2103, 2109, 2115, 2122, 2129, 2136, 2139, 2143, 2150, 2158, 2165}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
