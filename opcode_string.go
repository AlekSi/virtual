// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddI32AddI64AddPtrAddPtrsAddSPAnd16And32And64And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBitfieldI8BitfieldI16BitfieldI32BitfieldI64BitfieldU8BitfieldU16BitfieldU32BitfieldU64BoolC128BoolF32BoolF64BoolI16BoolI32BoolI64BoolI8CallCallFPConvC64C128ConvF32F64ConvF32I32ConvF32U32ConvF64F32ConvF64I32ConvF64I64ConvF64I8ConvF64U16ConvF64U32ConvF64U64ConvI16I32ConvI16I64ConvI16U32ConvI32C128ConvI32C64ConvI32F32ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64F64ConvI64I16ConvI64I32ConvI64I8ConvI64U16ConvI8I16ConvI8I32ConvI8I64ConvI8U32ConvU16I32ConvU16I64ConvU16U32ConvU32F32ConvU32F64ConvU32I16ConvU32I64ConvU32U8ConvU8I16ConvU8I32ConvU8U32ConvU8U64CopyCpl32Cpl64Cpl8DSDSC128DSI16DSI32DSI64DSI8DSNDivF32DivF64DivI32DivI64DivU32DivU64Dup32Dup64Dup8EqF32EqF64EqI32EqI64EqI8ExtFPFuncGeqF32GeqF64GeqI32GeqI64GeqU32GeqU64GtF32GtF64GtI32GtI64GtU32GtU64IndexIndexI16IndexI32IndexI64IndexU32IndexU64IndexI8IndexU8JmpJmpPJnzJzLabelLeqF32LeqF64LeqI32LeqI64LeqU32LeqU64LoadLoad16Load32Load64Load8LshI16LshI32LshI64LshI8LtF32LtF64LtI32LtI64LtU32LtU64MulC64MulF32MulF64MulI32MulI64NegF32NegF64NegI16NegI32NegI64NegI8NegIndexI32NegIndexI64NegIndexU64NeqC128NeqC64NeqF32NeqF64NeqI32NeqI64NotOr32Or64PanicPostIncF64PostIncI16PostIncI32PostIncI64PostIncI8PostIncPtrPostIncU32BitsPostIncU64BitsPreIncI16PreIncI32PreIncI64PreIncI8PreIncPtrPreIncU32BitsPreIncU64BitsPtrDiffPush8Push16Push32Push64RemI32RemI64RemU32RemU64ReturnRshI16RshI32RshI64RshI8RshU16RshU32RshU64RshU8StoreStore16Store32Store64Store8StoreBits16StoreBits32StoreBits64StoreBits8StrNCopySubF32SubF64SubI32SubI64SubPtrsTextVariableVariable16Variable32Variable64Variable8Xor32Xor64Zero8Zero16Zero32Zero64abortabsacosallocaasinatancallocceilclrsbclrsblclrsbllclzclzlclzllcoscoshctzctzlctzllexitexpfabsfcloseffsffslffsllfgetcfgetsfloorfopenfprintffreadfreefwriteisinfisinffisinflisprintloglog10mallocmemcmpmemcpymemsetparityparitylparityllpopcountpopcountlpopcountllpowprintfreturnAddressroundsign_bitsign_bitfsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolowervfprintfvprintf"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 23, 29, 35, 42, 47, 52, 57, 62, 66, 74, 84, 94, 104, 113, 122, 133, 135, 145, 156, 167, 178, 188, 199, 210, 221, 229, 236, 243, 250, 257, 264, 270, 274, 280, 291, 301, 311, 321, 331, 341, 351, 360, 370, 380, 390, 400, 410, 420, 431, 441, 451, 461, 471, 481, 490, 500, 510, 520, 529, 539, 548, 557, 566, 575, 585, 595, 605, 615, 625, 635, 645, 654, 663, 672, 681, 690, 694, 699, 704, 708, 710, 716, 721, 726, 731, 735, 738, 744, 750, 756, 762, 768, 774, 779, 784, 788, 793, 798, 803, 808, 812, 815, 817, 821, 827, 833, 839, 845, 851, 857, 862, 867, 872, 877, 882, 887, 892, 900, 908, 916, 924, 932, 939, 946, 949, 953, 956, 958, 963, 969, 975, 981, 987, 993, 999, 1003, 1009, 1015, 1021, 1026, 1032, 1038, 1044, 1049, 1054, 1059, 1064, 1069, 1074, 1079, 1085, 1091, 1097, 1103, 1109, 1115, 1121, 1127, 1133, 1139, 1144, 1155, 1166, 1177, 1184, 1190, 1196, 1202, 1208, 1214, 1217, 1221, 1225, 1230, 1240, 1250, 1260, 1270, 1279, 1289, 1303, 1317, 1326, 1335, 1344, 1352, 1361, 1374, 1387, 1394, 1399, 1405, 1411, 1417, 1423, 1429, 1435, 1441, 1447, 1453, 1459, 1465, 1470, 1476, 1482, 1488, 1493, 1498, 1505, 1512, 1519, 1525, 1536, 1547, 1558, 1568, 1576, 1582, 1588, 1594, 1600, 1607, 1611, 1619, 1629, 1639, 1649, 1658, 1663, 1668, 1673, 1679, 1685, 1691, 1696, 1699, 1703, 1709, 1713, 1717, 1723, 1727, 1732, 1738, 1745, 1748, 1752, 1757, 1760, 1764, 1767, 1771, 1776, 1780, 1783, 1787, 1793, 1796, 1800, 1805, 1810, 1815, 1820, 1825, 1832, 1837, 1841, 1847, 1852, 1858, 1864, 1871, 1874, 1879, 1885, 1891, 1897, 1903, 1909, 1916, 1924, 1932, 1941, 1951, 1954, 1960, 1973, 1978, 1986, 1995, 1998, 2002, 2009, 2013, 2019, 2025, 2031, 2037, 2043, 2050, 2057, 2064, 2067, 2071, 2078, 2086, 2093}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
