// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddC128AddI32AddI64AddPtrAddPtrsAddSPAnd16And32And64And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBitfieldI8BitfieldI16BitfieldI32BitfieldI64BitfieldU8BitfieldU16BitfieldU32BitfieldU64BoolC128BoolF32BoolF64BoolI16BoolI32BoolI64BoolI8CallCallFPConvC64C128ConvF32F64ConvF32I32ConvF32U32ConvF64F32ConvF64I32ConvF64I64ConvF64I8ConvF64U16ConvF64U32ConvF64U64ConvI16I32ConvI16I64ConvI16U32ConvI32C128ConvI32C64ConvI32F32ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64F64ConvI64I16ConvI64I32ConvI64I8ConvI64U16ConvI8I16ConvI8I32ConvI8I64ConvI8U32ConvU16I32ConvU16I64ConvU16U32ConvU32F32ConvU32F64ConvU32I16ConvU32I64ConvU32U8ConvU8I16ConvU8I32ConvU8U32ConvU8U64CopyCpl32Cpl64Cpl8DSDSC128DSI16DSI32DSI64DSI8DSNDivF32DivF64DivI32DivI64DivU32DivU64Dup32Dup64Dup8EqF32EqF64EqI32EqI64EqI8ExtFPField8Field16Field64FuncGeqF32GeqF64GeqI32GeqI64GeqU32GeqU64GtF32GtF64GtI32GtI64GtU32GtU64IndexIndexI16IndexI32IndexI64IndexU32IndexU64IndexI8IndexU8JmpJmpPJnzJzLabelLeqF32LeqF64LeqI32LeqI64LeqU32LeqU64LoadLoad16Load32Load64Load8LshI16LshI32LshI64LshI8LtF32LtF64LtI32LtI64LtU32LtU64MulC64MulF32MulF64MulI32MulI64NegF32NegF64NegI16NegI32NegI64NegI8NegIndexI32NegIndexI64NegIndexU64NeqC128NeqC64NeqF32NeqF64NeqI32NeqI64NotOr32Or64PanicPostIncF64PostIncI16PostIncI32PostIncI64PostIncI8PostIncPtrPostIncU32BitsPostIncU64BitsPreIncI16PreIncI32PreIncI64PreIncI8PreIncPtrPreIncU32BitsPreIncU64BitsPtrDiffPush8Push16Push32Push64PushC128RemI32RemI64RemU32RemU64ReturnRshI16RshI32RshI64RshI8RshU16RshU32RshU64RshU8StoreStore16Store32Store64Store8StoreBits16StoreBits32StoreBits64StoreBits8StrNCopySubF32SubF64SubI32SubI64SubPtrsTextVariableVariable16Variable32Variable64Variable8Xor32Xor64Zero8Zero16Zero32Zero64abortabsacosallocaasinatanbswap64callocceilclrsbclrsblclrsbllclzclzlclzllcoscoshctzctzlctzllexitexpfabsfcloseffsffslffsllfgetcfgetsfloorfopenfprintfframeAddressfreadfreefwriteisinfisinffisinflisprintloglog10mallocmemcmpmemcpymemsetparityparitylparityllpopcountpopcountlpopcountllpowprintfreturnAddressroundsign_bitsign_bitfsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolowervfprintfvprintf"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 24, 30, 36, 42, 49, 54, 59, 64, 69, 73, 81, 91, 101, 111, 120, 129, 140, 142, 152, 163, 174, 185, 195, 206, 217, 228, 236, 243, 250, 257, 264, 271, 277, 281, 287, 298, 308, 318, 328, 338, 348, 358, 367, 377, 387, 397, 407, 417, 427, 438, 448, 458, 468, 478, 488, 497, 507, 517, 527, 536, 546, 555, 564, 573, 582, 592, 602, 612, 622, 632, 642, 652, 661, 670, 679, 688, 697, 701, 706, 711, 715, 717, 723, 728, 733, 738, 742, 745, 751, 757, 763, 769, 775, 781, 786, 791, 795, 800, 805, 810, 815, 819, 822, 824, 830, 837, 844, 848, 854, 860, 866, 872, 878, 884, 889, 894, 899, 904, 909, 914, 919, 927, 935, 943, 951, 959, 966, 973, 976, 980, 983, 985, 990, 996, 1002, 1008, 1014, 1020, 1026, 1030, 1036, 1042, 1048, 1053, 1059, 1065, 1071, 1076, 1081, 1086, 1091, 1096, 1101, 1106, 1112, 1118, 1124, 1130, 1136, 1142, 1148, 1154, 1160, 1166, 1171, 1182, 1193, 1204, 1211, 1217, 1223, 1229, 1235, 1241, 1244, 1248, 1252, 1257, 1267, 1277, 1287, 1297, 1306, 1316, 1330, 1344, 1353, 1362, 1371, 1379, 1388, 1401, 1414, 1421, 1426, 1432, 1438, 1444, 1452, 1458, 1464, 1470, 1476, 1482, 1488, 1494, 1500, 1505, 1511, 1517, 1523, 1528, 1533, 1540, 1547, 1554, 1560, 1571, 1582, 1593, 1603, 1611, 1617, 1623, 1629, 1635, 1642, 1646, 1654, 1664, 1674, 1684, 1693, 1698, 1703, 1708, 1714, 1720, 1726, 1731, 1734, 1738, 1744, 1748, 1752, 1759, 1765, 1769, 1774, 1780, 1787, 1790, 1794, 1799, 1802, 1806, 1809, 1813, 1818, 1822, 1825, 1829, 1835, 1838, 1842, 1847, 1852, 1857, 1862, 1867, 1874, 1886, 1891, 1895, 1901, 1906, 1912, 1918, 1925, 1928, 1933, 1939, 1945, 1951, 1957, 1963, 1970, 1978, 1986, 1995, 2005, 2008, 2014, 2027, 2032, 2040, 2049, 2052, 2056, 2063, 2067, 2073, 2079, 2085, 2091, 2097, 2104, 2111, 2118, 2121, 2125, 2132, 2140, 2147}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
