// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddI32AddI64AddPtrAddPtrsAddSPAnd32And64And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBoolI32BoolI64BoolI8CallCallFPConvF32F64ConvF32I32ConvF64F32ConvF64I32ConvF64I8ConvI16I32ConvI16U32ConvI32F32ConvI32C64ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64I32ConvI64U16ConvI8I16ConvI8I32ConvI8I64ConvU16I32ConvU16I64ConvU16U32ConvU32I64ConvU32U8ConvU8I32ConvU8U32CopyCpl64DSDSI8DSI16DSI32DSI64DivF64DivI32DivU32DivI64DivU64Dup32Dup64Dup8EqI32EqI64EqI8ExtFloat32Float64FuncGeqF64GeqI32GeqI64GeqU32GeqU64GtF64GtI32GtI64GtU32GtU64IndexIndexI16IndexI32IndexU32IndexU64Int32Int64JmpJnzJzLabelLeqI32LeqU32LeqU64LoadLoad16Load32Load64Load8LshI8LshI16LshI32LshI64LtF64LtI32LtI64LtU32LtU64MulF32MulF64MulI32MulI64NegI32NegIndexI32NegIndexU64NeqC64NeqF64NeqI32NeqI64NotOr32Or64PanicPostIncF64PostIncI32PostIncI64PostIncI8PostIncPtrPreIncI32PreIncI8PreIncPtrPtrDiffRemI32RemU32RemU64ReturnRshI8RshU8RshU16RshI32RshU32RshI64RshU64StoreStore16Store32Store64Store8StoreBits8StoreBits32StrNCopySubF32SubF64SubI32SubI64TextVariableVariable16Variable32Variable64Variable8Xor32Xor64Zero32Zero64abortacosasinatanceilcoscoshexitexpfabsfclosefgetcfgetsfloorfopenfprintffreadfwriteloglog10mallocmemcmpmemcpymemsetpowprintfroundsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolower"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 23, 29, 35, 42, 47, 52, 57, 61, 69, 79, 89, 99, 108, 117, 128, 130, 137, 144, 150, 154, 160, 170, 180, 190, 200, 209, 219, 229, 239, 249, 259, 269, 279, 288, 298, 308, 317, 326, 335, 345, 355, 365, 375, 384, 393, 402, 406, 411, 413, 417, 422, 427, 432, 438, 444, 450, 456, 462, 467, 472, 476, 481, 486, 490, 493, 500, 507, 511, 517, 523, 529, 535, 541, 546, 551, 556, 561, 566, 571, 579, 587, 595, 603, 608, 613, 616, 619, 621, 626, 632, 638, 644, 648, 654, 660, 666, 671, 676, 682, 688, 694, 699, 704, 709, 714, 719, 725, 731, 737, 743, 749, 760, 771, 777, 783, 789, 795, 798, 802, 806, 811, 821, 831, 841, 850, 860, 869, 877, 886, 893, 899, 905, 911, 917, 922, 927, 933, 939, 945, 951, 957, 962, 969, 976, 983, 989, 999, 1010, 1018, 1024, 1030, 1036, 1042, 1046, 1054, 1064, 1074, 1084, 1093, 1098, 1103, 1109, 1115, 1120, 1124, 1128, 1132, 1136, 1139, 1143, 1147, 1150, 1154, 1160, 1165, 1170, 1175, 1180, 1187, 1192, 1198, 1201, 1206, 1212, 1218, 1224, 1230, 1233, 1239, 1244, 1247, 1251, 1258, 1262, 1268, 1274, 1280, 1286, 1292, 1299, 1306, 1313, 1316, 1320, 1327}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
