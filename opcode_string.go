// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddI32AddI64AddPtrAddPtrsAddSPAnd32And64And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBoolI32BoolI64BoolI8CallCallFPConvF32F64ConvF32I32ConvF64F32ConvF64I32ConvF64I8ConvI16I32ConvI16U32ConvI32F32ConvI32C64ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64I8ConvI64I32ConvI64U16ConvI8I16ConvI8I32ConvI8I64ConvU16I32ConvU16I64ConvU16U32ConvU32I64ConvU32U8ConvU8I32ConvU8U32CopyCpl64DSDSNDSI8DSI16DSI32DSI64DivF64DivI32DivU32DivI64DivU64Dup32Dup64Dup8EqI32EqI64EqI8ExtFloat32Float64FuncGeqF64GeqI32GeqI64GeqU32GeqU64GtF64GtI32GtI64GtU32GtU64IndexIndexI16IndexI32IndexU32IndexU64Int32Int64JmpJnzJzLabelLeqI32LeqU32LeqI64LeqU64LoadLoad16Load32Load64Load8LshI8LshI16LshI32LshI64LtF64LtI32LtI64LtU32LtU64MulF32MulF64MulI32MulI64NegF64NegI32NegI64NegIndexI32NegIndexU64NeqC64NeqF32NeqF64NeqI32NeqI64NotOr32Or64PanicPostIncF64PostIncI32PostIncI64PostIncI8PostIncPtrPreIncI32PreIncI8PreIncPtrPtrDiffRemI32RemU32RemU64ReturnRshI8RshU8RshI16RshU16RshI32RshU32RshI64RshU64StoreStore16Store32Store64Store8StoreBits8StoreBits32StrNCopySubF32SubF64SubI32SubI64TextVariableVariable16Variable32Variable64Variable8Xor32Xor64Zero32Zero64abortacosasinatancallocceilcoscoshexitexpfabsfclosefgetcfgetsfloorfopenfprintffreadfwriteloglog10mallocmemcmpmemcpymemsetpowprintfroundsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolower"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 23, 29, 35, 42, 47, 52, 57, 61, 69, 79, 89, 99, 108, 117, 128, 130, 137, 144, 150, 154, 160, 170, 180, 190, 200, 209, 219, 229, 239, 249, 259, 269, 279, 288, 297, 307, 317, 326, 335, 344, 354, 364, 374, 384, 393, 402, 411, 415, 420, 422, 425, 429, 434, 439, 444, 450, 456, 462, 468, 474, 479, 484, 488, 493, 498, 502, 505, 512, 519, 523, 529, 535, 541, 547, 553, 558, 563, 568, 573, 578, 583, 591, 599, 607, 615, 620, 625, 628, 631, 633, 638, 644, 650, 656, 662, 666, 672, 678, 684, 689, 694, 700, 706, 712, 717, 722, 727, 732, 737, 743, 749, 755, 761, 767, 773, 779, 790, 801, 807, 813, 819, 825, 831, 834, 838, 842, 847, 857, 867, 877, 886, 896, 905, 913, 922, 929, 935, 941, 947, 953, 958, 963, 969, 975, 981, 987, 993, 999, 1004, 1011, 1018, 1025, 1031, 1041, 1052, 1060, 1066, 1072, 1078, 1084, 1088, 1096, 1106, 1116, 1126, 1135, 1140, 1145, 1151, 1157, 1162, 1166, 1170, 1174, 1180, 1184, 1187, 1191, 1195, 1198, 1202, 1208, 1213, 1218, 1223, 1228, 1235, 1240, 1246, 1249, 1254, 1260, 1266, 1272, 1278, 1281, 1287, 1292, 1295, 1299, 1306, 1310, 1316, 1322, 1328, 1334, 1340, 1347, 1354, 1361, 1364, 1368, 1375}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
