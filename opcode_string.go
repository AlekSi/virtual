// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddI32AddI64AddPtrAddPtrsAddSPAnd32And64And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBoolI32BoolI64BoolI16BoolI8CallCallFPConvF32F64ConvF32I32ConvF64F32ConvF64I32ConvF64I8ConvI16I32ConvI16U32ConvI16I64ConvI32F32ConvI32C64ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64I8ConvI64I32ConvI64U16ConvI8I16ConvI8I32ConvI8U32ConvI8I64ConvU16I32ConvU16I64ConvU16U32ConvU32I64ConvU32U8ConvU8I32ConvU8U32CopyCpl64DSDSNDSI8DSI16DSI32DSI64DivF64DivI32DivU32DivI64DivU64Dup32Dup64Dup8EqI32EqI64EqI8ExtFPFloat32Float64FuncGeqF64GeqI32GeqI64GeqU32GeqU64GtF64GtI32GtI64GtU32GtU64IndexIndexU8IndexI16IndexI32IndexU32IndexU64Int32Int64JmpJnzJzLabelLeqI32LeqU32LeqI64LeqU64LoadLoad16Load32Load64Load8LshI8LshI16LshI32LshI64LtF64LtI32LtI64LtU32LtU64MulF32MulF64MulI32MulI64NegF64NegI32NegI64NegIndexI32NegIndexU64NeqC64NeqF32NeqF64NeqI32NeqI64NotOr32Or64PanicPostIncF64PostIncI32PostIncI64PostIncI8PostIncPtrPreIncI32PreIncI8PreIncPtrPtrDiffRemI32RemU32RemU64ReturnRshI8RshU8RshI16RshU16RshI32RshU32RshI64RshU64StoreStore16Store32Store64Store8StoreBits8StoreBits32StrNCopySubF32SubF64SubI32SubI64TextVariableVariable16Variable32Variable64Variable8Xor32Xor64Zero32Zero64abortacosasinatancallocceilcoscoshexitexpfabsfclosefgetcfgetsfloorfopenfprintffreadfwriteloglog10mallocmemcmpmemcpymemsetpowprintfroundsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolower"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 23, 29, 35, 42, 47, 52, 57, 61, 69, 79, 89, 99, 108, 117, 128, 130, 137, 144, 151, 157, 161, 167, 177, 187, 197, 207, 216, 226, 236, 246, 256, 266, 276, 286, 296, 305, 314, 324, 334, 343, 352, 361, 370, 380, 390, 400, 410, 419, 428, 437, 441, 446, 448, 451, 455, 460, 465, 470, 476, 482, 488, 494, 500, 505, 510, 514, 519, 524, 528, 531, 533, 540, 547, 551, 557, 563, 569, 575, 581, 586, 591, 596, 601, 606, 611, 618, 626, 634, 642, 650, 655, 660, 663, 666, 668, 673, 679, 685, 691, 697, 701, 707, 713, 719, 724, 729, 735, 741, 747, 752, 757, 762, 767, 772, 778, 784, 790, 796, 802, 808, 814, 825, 836, 842, 848, 854, 860, 866, 869, 873, 877, 882, 892, 902, 912, 921, 931, 940, 948, 957, 964, 970, 976, 982, 988, 993, 998, 1004, 1010, 1016, 1022, 1028, 1034, 1039, 1046, 1053, 1060, 1066, 1076, 1087, 1095, 1101, 1107, 1113, 1119, 1123, 1131, 1141, 1151, 1161, 1170, 1175, 1180, 1186, 1192, 1197, 1201, 1205, 1209, 1215, 1219, 1222, 1226, 1230, 1233, 1237, 1243, 1248, 1253, 1258, 1263, 1270, 1275, 1281, 1284, 1289, 1295, 1301, 1307, 1313, 1316, 1322, 1327, 1330, 1334, 1341, 1345, 1351, 1357, 1363, 1369, 1375, 1382, 1389, 1396, 1399, 1403, 1410}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
