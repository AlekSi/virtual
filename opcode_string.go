// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF64AddI32AddI64AddPtrAddPtrsAddSPAnd32And8Argument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBoolI32BoolI64BoolI8CallCallFPConvF32F64ConvF64F32ConvF64I32ConvF64I8ConvI16U32ConvI32F32ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64I32ConvI8I32ConvI8I64ConvU16I32ConvU16I64ConvU32I64ConvU8I32CopyDSDSI16DSI32DSI64DivF64DivI32DivU64Dup32Dup64EqI32EqI64ExtFloat32Float64FuncGeqI32GeqU64GtI32GtI64GtU32GtU64IndexIndexI32IndexU32Int32Int64JmpJnzJzLabelLeqI32Load16Load32Load64Load8LshI32LtI32LtU64MulF64MulI32NegI32NeqI32NeqI64NotOr32PanicPostIncI32PostIncI8PostIncPtrPreIncI32PreIncI8PreIncPtrPtrDiffRemU64ReturnRshI32RshI8Store16Store32Store64Store8StoreBits8SubF64SubI32SubI64TextVariableVariable32Variable64Variable8Xor32Zero32Zero64abortacosasinatanceilcoscoshexitexpfabsfclosefgetcfgetsfloorfopenfprintffreadfwriteloglog10memcmpmemcpymemsetpowprintfroundsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolower"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 23, 29, 36, 41, 46, 50, 60, 70, 80, 89, 98, 109, 111, 118, 125, 131, 135, 141, 151, 161, 171, 180, 190, 200, 210, 220, 230, 239, 249, 258, 267, 277, 287, 297, 306, 310, 312, 317, 322, 327, 333, 339, 345, 350, 355, 360, 365, 368, 375, 382, 386, 392, 398, 403, 408, 413, 418, 423, 431, 439, 444, 449, 452, 455, 457, 462, 468, 474, 480, 486, 491, 497, 502, 507, 513, 519, 525, 531, 537, 540, 544, 549, 559, 568, 578, 587, 595, 604, 611, 617, 623, 629, 634, 641, 648, 655, 661, 671, 677, 683, 689, 693, 701, 711, 721, 730, 735, 741, 747, 752, 756, 760, 764, 768, 771, 775, 779, 782, 786, 792, 797, 802, 807, 812, 819, 824, 830, 833, 838, 844, 850, 856, 859, 865, 870, 873, 877, 884, 888, 894, 900, 906, 912, 918, 925, 932, 939, 942, 946, 953}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
