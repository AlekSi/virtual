// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddI32AddI64AddPtrAddPtrsAddSPAnd32And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBoolI32BoolI64BoolI8CallCallFPConvF32F64ConvF32I32ConvF64F32ConvF64I32ConvF64I8ConvI16U32ConvI32F32ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64I32ConvI64U16ConvI8I32ConvI8I64ConvU16I32ConvU16I64ConvU16U32ConvU32I64ConvU32U8ConvU8I32ConvU8U32CopyDSDSI16DSI32DSI64DivF64DivI32DivI64DivU64Dup32Dup64EqI32EqI64ExtFloat32Float64FuncGeqF64GeqI32GeqU64GtI32GtI64GtU32GtU64IndexIndexI32IndexU32Int32Int64JmpJnzJzLabelLeqI32Load16Load32Load64Load8LshI32LshI64LtI32LtI64LtU64MulF32MulF64MulI32MulI64NegI32NegIndexU64NeqI32NeqI64NeqF64NotOr32PanicPostIncI32PostIncI8PostIncPtrPreIncI32PreIncI8PreIncPtrPtrDiffRemI32RemU64ReturnRshI32RshI8Store16Store32Store64Store8StoreBits8SubF32SubF64SubI32SubI64TextVariableVariable32Variable64Variable8Xor32Zero32Zero64abortacosasinatanceilcoscoshexitexpfabsfclosefgetcfgetsfloorfopenfprintffreadfwriteloglog10memcmpmemcpymemsetpowprintfroundsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolower"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 23, 29, 35, 42, 47, 52, 56, 64, 74, 84, 94, 103, 112, 123, 125, 132, 139, 145, 149, 155, 165, 175, 185, 195, 204, 214, 224, 234, 244, 254, 263, 273, 283, 292, 301, 311, 321, 331, 341, 350, 359, 368, 372, 374, 379, 384, 389, 395, 401, 407, 413, 418, 423, 428, 433, 436, 443, 450, 454, 460, 466, 472, 477, 482, 487, 492, 497, 505, 513, 518, 523, 526, 529, 531, 536, 542, 548, 554, 560, 565, 571, 577, 582, 587, 592, 598, 604, 610, 616, 622, 633, 639, 645, 651, 654, 658, 663, 673, 682, 692, 701, 709, 718, 725, 731, 737, 743, 749, 754, 761, 768, 775, 781, 791, 797, 803, 809, 815, 819, 827, 837, 847, 856, 861, 867, 873, 878, 882, 886, 890, 894, 897, 901, 905, 908, 912, 918, 923, 928, 933, 938, 945, 950, 956, 959, 964, 970, 976, 982, 985, 991, 996, 999, 1003, 1010, 1014, 1020, 1026, 1032, 1038, 1044, 1051, 1058, 1065, 1068, 1072, 1079}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
