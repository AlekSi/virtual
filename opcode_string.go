// Code generated by "stringer -type Opcode enum.go"; DO NOT EDIT

package virtual

import "fmt"

const _Opcode_name = "NopAPAddF32AddF64AddI32AddI64AddPtrAddPtrsAddSPAnd32And64And8ArgumentArgument16Argument32Argument64Argument8ArgumentsArgumentsFPBPBoolI32BoolI64BoolI16BoolI8CallCallFPConvF32F64ConvF32I32ConvF64F32ConvF64I32ConvF64I8ConvI16I32ConvI16U32ConvI16I64ConvI32F32ConvI32C64ConvI32F64ConvI32I16ConvI32I64ConvI32I8ConvI64I8ConvI64I32ConvI64U16ConvI8I16ConvI8I32ConvI8I64ConvU16I32ConvU16I64ConvU16U32ConvU32I64ConvU32U8ConvU8I32ConvU8U32CopyCpl64DSDSNDSI8DSI16DSI32DSI64DivF64DivI32DivU32DivI64DivU64Dup32Dup64Dup8EqI32EqI64EqI8ExtFPFloat32Float64FuncGeqF64GeqI32GeqI64GeqU32GeqU64GtF64GtI32GtI64GtU32GtU64IndexIndexI16IndexI32IndexU32IndexU64Int32Int64JmpJnzJzLabelLeqI32LeqU32LeqI64LeqU64LoadLoad16Load32Load64Load8LshI8LshI16LshI32LshI64LtF64LtI32LtI64LtU32LtU64MulF32MulF64MulI32MulI64NegF64NegI32NegI64NegIndexI32NegIndexU64NeqC64NeqF32NeqF64NeqI32NeqI64NotOr32Or64PanicPostIncF64PostIncI32PostIncI64PostIncI8PostIncPtrPreIncI32PreIncI8PreIncPtrPtrDiffRemI32RemU32RemU64ReturnRshI8RshU8RshI16RshU16RshI32RshU32RshI64RshU64StoreStore16Store32Store64Store8StoreBits8StoreBits32StrNCopySubF32SubF64SubI32SubI64TextVariableVariable16Variable32Variable64Variable8Xor32Xor64Zero32Zero64abortacosasinatancallocceilcoscoshexitexpfabsfclosefgetcfgetsfloorfopenfprintffreadfwriteloglog10mallocmemcmpmemcpymemsetpowprintfroundsinsinhsprintfsqrtstrcatstrchrstrcmpstrcpystrlenstrncmpstrncpystrrchrtantanhtolower"

var _Opcode_index = [...]uint16{0, 3, 5, 11, 17, 23, 29, 35, 42, 47, 52, 57, 61, 69, 79, 89, 99, 108, 117, 128, 130, 137, 144, 151, 157, 161, 167, 177, 187, 197, 207, 216, 226, 236, 246, 256, 266, 276, 286, 296, 305, 314, 324, 334, 343, 352, 361, 371, 381, 391, 401, 410, 419, 428, 432, 437, 439, 442, 446, 451, 456, 461, 467, 473, 479, 485, 491, 496, 501, 505, 510, 515, 519, 522, 524, 531, 538, 542, 548, 554, 560, 566, 572, 577, 582, 587, 592, 597, 602, 610, 618, 626, 634, 639, 644, 647, 650, 652, 657, 663, 669, 675, 681, 685, 691, 697, 703, 708, 713, 719, 725, 731, 736, 741, 746, 751, 756, 762, 768, 774, 780, 786, 792, 798, 809, 820, 826, 832, 838, 844, 850, 853, 857, 861, 866, 876, 886, 896, 905, 915, 924, 932, 941, 948, 954, 960, 966, 972, 977, 982, 988, 994, 1000, 1006, 1012, 1018, 1023, 1030, 1037, 1044, 1050, 1060, 1071, 1079, 1085, 1091, 1097, 1103, 1107, 1115, 1125, 1135, 1145, 1154, 1159, 1164, 1170, 1176, 1181, 1185, 1189, 1193, 1199, 1203, 1206, 1210, 1214, 1217, 1221, 1227, 1232, 1237, 1242, 1247, 1254, 1259, 1265, 1268, 1273, 1279, 1285, 1291, 1297, 1300, 1306, 1311, 1314, 1318, 1325, 1329, 1335, 1341, 1347, 1353, 1359, 1366, 1373, 1380, 1383, 1387, 1394}

func (i Opcode) String() string {
	if i < 0 || i >= Opcode(len(_Opcode_index)-1) {
		return fmt.Sprintf("Opcode(%d)", i)
	}
	return _Opcode_name[_Opcode_index[i]:_Opcode_index[i+1]]
}
